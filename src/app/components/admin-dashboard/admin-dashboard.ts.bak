import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

// PrimeNG Imports
import { ButtonModule } from 'primeng/button';
import { TableModule } from 'primeng/table';
import { CardModule } from 'primeng/card';
import { ChartModule } from 'primeng/chart';
import { TagModule } from 'primeng/tag';
import { ProgressBarModule } from 'primeng/progressbar';
import { InputTextModule } from 'primeng/inputtext';

@Component({
  selector: 'app-admin-dashboard',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ButtonModule,
    TableModule,
    CardModule,
    ChartModule,
    TagModule,
    ProgressBarModule,
    InputTextModule
  ],
  templateUrl: './admin-dashboard.html',
  styleUrl: './admin-dashboard.css'
})
export class AdminDashboard implements OnInit {

  activeTab = 'dashboard';
  currentZoneType: string = '';
  selectedLocation = 'Edificio D';
  locations = [
    'Edificio D',
    'Zona Norte',
    'Zona Sur', 
    'Zona Este',
    'Zona Oeste',
    'Centro'
  ];

  // Estadísticas por zona
  dashboardStats: any = {
    'Edificio D': {
      active: 8,
      processing: 2,
      totalReports: 43,
      totalUsers: 15,
      thisMonth: 35,
      totalClassifiers: 3,
      totalDetections: 43,
      activeUsers: 8
    },
    'Zona Norte': {
      active: 12,
      processing: 5,
      totalReports: 20,
      totalUsers: 18,
      thisMonth: 15,
      totalClassifiers: 2,
      totalDetections: 20,
      activeUsers: 12
    },
    'Zona Sur': {
      active: 15,
      processing: 8,
      totalReports: 35,
      totalUsers: 22,
      thisMonth: 28,
      totalClassifiers: 2,
      totalDetections: 35,
      activeUsers: 15
    },
    'Zona Este': {
      active: 10,
      processing: 3,
      totalReports: 18,
      totalUsers: 14,
      thisMonth: 12,
      totalClassifiers: 2,
      totalDetections: 18,
      activeUsers: 10
    },
    'Zona Oeste': {
      active: 6,
      processing: 2,
      totalReports: 12,
      totalUsers: 10,
      thisMonth: 8,
      totalClassifiers: 1,
      totalDetections: 12,
      activeUsers: 6
    },
    'Centro': {
      active: 20,
      processing: 12,
      totalReports: 50,
      totalUsers: 30,
      thisMonth: 45,
      totalClassifiers: 4,
      totalDetections: 50,
      activeUsers: 20
    }
  };

  // Clasificadores por zona
  classifiersByZone: any = {
    'Edificio D': [
      {
        id: 'M-16',
        name: 'Entrada Principal',
        count: 16,
        activeCount: 1,
        inactiveCount: 1,
        pendingCount: 1,
        detections: 16
      },
      {
        id: 'PF-SUP',
        name: 'Pasillo Superior',
        count: 15,
        activeCount: 4,
        inactiveCount: 2,
        pendingCount: 5,
        detections: 15
      },
      {
        id: 'PF-INF',
        name: 'Pasillo Inferior',
        count: 12,
        activeCount: 7,
        inactiveCount: 0,
        pendingCount: 12,
        detections: 12
      }
    ],
    'Zona Norte': [
      {
        id: 'ZN-01',
        name: 'Clasificador Norte A',
        count: 8,
        activeCount: 3,
        inactiveCount: 2,
        pendingCount: 3,
        detections: 8
      },
      {
        id: 'ZN-02',
        name: 'Clasificador Norte B',
        count: 12,
        activeCount: 5,
        inactiveCount: 4,
        pendingCount: 3,
        detections: 12
      }
    ],
    'Zona Sur': [
      {
        id: 'ZS-01',
        name: 'Clasificador Sur A',
        count: 20,
        activeCount: 8,
        inactiveCount: 7,
        pendingCount: 5,
        detections: 20
      },
      {
        id: 'ZS-02',
        name: 'Clasificador Sur B',
        count: 15,
        activeCount: 6,
        inactiveCount: 5,
        pendingCount: 4,
        detections: 15
      }
    ],
    'Zona Este': [
      {
        id: 'ZE-01',
        name: 'Clasificador Este A',
        count: 10,
        activeCount: 4,
        inactiveCount: 3,
        pendingCount: 3,
        detections: 10
      },
      {
        id: 'ZE-02',
        name: 'Clasificador Este B',
        count: 8,
        activeCount: 3,
        inactiveCount: 2,
        pendingCount: 3,
        detections: 8
      }
    ],
    'Zona Oeste': [
      {
        id: 'ZO-01',
        name: 'Clasificador Oeste',
        count: 12,
        activeCount: 5,
        inactiveCount: 4,
        pendingCount: 3,
        detections: 12
      }
    ],
    'Centro': [
      {
        id: 'CT-01',
        name: 'Clasificador Central A',
        count: 25,
        activeCount: 10,
        inactiveCount: 8,
        pendingCount: 7,
        detections: 25
      },
      {
        id: 'CT-02',
        name: 'Clasificador Central B',
        count: 15,
        activeCount: 6,
        inactiveCount: 5,
        pendingCount: 4,
        detections: 15
      },
      {
        id: 'CT-03',
        name: 'Clasificador Central C',
        count: 10,
        activeCount: 4,
        inactiveCount: 3,
        pendingCount: 3,
        detections: 10
      }
    ]
  };

  chartData: any;
  chartOptions: any;

  users = [
    {
      id: 1,
      nombre: 'Juan Pérez',
      email: 'juan.perez@email.com',
      rol: 'Administrador',
      estado: 'Activo',
      fechaCreacion: '2024-01-15',
      ultimoAcceso: '2024-01-20'
    },
    {
      id: 2,
      nombre: 'María García',
      email: 'maria.garcia@email.com',
      rol: 'Usuario',
      estado: 'Inactivo',
      fechaCreacion: '2024-01-10',
      ultimoAcceso: '2024-01-18'
    },
    {
      id: 3,
      nombre: 'Carlos López',
      email: 'carlos.lopez@email.com',
      rol: 'Moderador',
      estado: 'Activo',
      fechaCreacion: '2024-01-12',
      ultimoAcceso: '2024-01-19'
    }
  ];

  filteredUsers = [...this.users];
  selectedUsers: any[] = [];
  searchTerm = '';
  selectedRoles: string[] = [];
  roleOptions = [
    { label: 'Administrador', value: 'Administrador' },
    { label: 'Usuario', value: 'Usuario' },
    { label: 'Moderador', value: 'Moderador' }
  ];

  constructor(
    private router: Router,
    private route: ActivatedRoute
  ) {}

  ngOnInit() {
    // Obtener el tipo de zona de los parámetros de ruta
    this.route.params.subscribe(params => {
      this.currentZoneType = params['type'] || '';
      if (this.currentZoneType) {
        // Mapear el tipo de zona a una ubicación específica
        this.mapZoneTypeToLocation(this.currentZoneType);
      }
    });

    this.initChart();
  }

  mapZoneTypeToLocation(zoneType: string) {
    const zoneMapping: any = {
      'edificio': 'Edificio D',
      'norte': 'Zona Norte',
      'sur': 'Zona Sur',
      'este': 'Zona Este',
      'oeste': 'Zona Oeste',
      'centro': 'Centro'
    };
    
    if (zoneMapping[zoneType]) {
      this.selectedLocation = zoneMapping[zoneType];
    }
  }

  setActiveTab(tab: string) {
    this.activeTab = tab;
  }

  // Método para obtener clasificadores de la zona actual
  getCurrentClassifiers() {
    return this.classifiersByZone[this.selectedLocation] || [];
  }

  // Método para obtener estadísticas de la zona actual
  getCurrentStats() {
    return this.dashboardStats[this.selectedLocation] || {
      active: 0,
      processing: 0,
      totalReports: 0,
      totalUsers: 0,
      thisMonth: 0,
      totalClassifiers: 0,
      totalDetections: 0,
      activeUsers: 0
    };
  }

  filterUsers() {
    this.filteredUsers = this.users.filter(user => {
      const matchesSearch = user.nombre.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
                           user.email.toLowerCase().includes(this.searchTerm.toLowerCase());
      const matchesRole = this.selectedRoles.length === 0 || this.selectedRoles.includes(user.rol);
      return matchesSearch && matchesRole;
    });
  }

  initChart() {
    this.chartData = {
      labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
      datasets: [
        {
          label: 'Reportes',
          data: [12, 19, 3, 5, 2, 3],
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }
      ]
    };

    this.chartOptions = {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Estadísticas Mensuales'
        }
      }
    };
  }

  onLocationChange() {
    // Actualizar datos cuando cambie la ubicación
    this.initChart();
  }

  getSeverity(estado: string): "success" | "secondary" | "info" | "warning" | "danger" | "contrast" | undefined {
    switch (estado) {
      case 'Activo':
        return 'success';
      case 'Inactivo':
        return 'danger';
      case 'Pendiente':
        return 'warning';
      default:
        return 'info';
    }
  }

  editUser(user: any) {
    // Implementar edición de usuario
    console.log('Editando usuario:', user);
  }

  deleteUser(user: any) {
    // Implementar eliminación de usuario
    console.log('Eliminando usuario:', user);
  }

  exportData() {
    // Implementar exportación de datos
    console.log('Exportando datos');
  }

  goBack() {
    this.router.navigate(['/landing']);
  }
}
